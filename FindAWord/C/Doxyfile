# Doxyfile for Find A Word
# Generated by me

# Set the working directory to the root of your project
# where your source files are located.
OUTPUT_DIRECTORY       = ./doc
INPUT                  = ./include ./src

# The file extensions to consider for input.
FILE_PATTERNS          = *.c *.h

# Enable warnings for potential issues in the code.
WARNINGS               = YES

# Set the title and version of the documentation.
PROJECT_NAME           = "Find A Word"
PROJECT_NUMBER         = 1.0

# Set the author and the version of Doxygen.
AUTHOR                 = "My Name"
VERSION                = 0.1

# Generate LaTeX output.
GENERATE_LATEX         = NO

# Generate HTML output.
GENERATE_HTML          = YES

# Generate RTF output.
GENERATE_RTF           = NO

# Generate man pages output.
GENERATE_MAN           = NO

# Generate XML output.
GENERATE_XML           = NO

# Set the character set of the documentation.
ENCODING        = UTF-8

# Set the language of the source code.
LANGUAGE               = English

# Set the style of the HTML output.
# HTML_STYLESHEET        = custom.css

# Set the graphics to be included in the HTML output.
# HTML_EXTRA_FILES       = logo.png

# Set the name of the output file for the HTML documentation.
HTML_OUTPUT            = index.html

# Set the size of the code snippets in the HTML output.
# You can adjust this value to fit your needs.
HTML_DYNAMIC_SECTIONS  = YES
SOURCE_BROWSER         = YES
INLINE_SOURCES         = YES

# Include additional directories in the search path for
# header files and source files.
INCLUDE_PATH           = ./include

# Exclude files or directories from the input.
EXCLUDE_PATTERNS       = */test/*

# Set the log file for Doxygen.
# You can change this value to fit your needs.
LOGFILE                = doxygen.log

# Set the maximum size of the log file.
# You can adjust this value to fit your needs.
MAX_LOG_SIZE           = 100000

# Set the type of member grouping to use.
# You can choose between "grouped" and "ungrouped".
# The default is "grouped".
# Use "ungrouped" if you want to see all members in one long list.
# Use "grouped" if you want to see members grouped by their type
# (e.g. functions, variables, etc.).
# MEMBER_GROUPING        = ungrouped

EXTRACT_ALL            = YES
